{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","createRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","onChange","target","value","keyName","onSubmit","event","preventDefault","id","type","placeholder","required","rows","RecipeList","recipes","deleteRecipe","tableRows","map","recipe","key","src","alt","className","onClick","handleDelete","RecipeData","App","setRecipes","indexToDelete","currentRecipes","filter","Recipe","index","newRecipe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAkGeA,MAhGf,YAAyC,IAAjBC,EAAgB,EAAhBA,aAChBC,EAAmB,CACvBC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,YAAa,IAEf,EAAgCC,mBAAS,eAAKN,IAA9C,mBAAOO,EAAP,KAAiBC,EAAjB,KAMA,SAASC,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OACZC,EAAQD,EAAOC,MACfC,EAAUF,EAAOT,KACvBO,EAAY,2BAAKD,GAAN,kBAAiBK,EAAUD,KASxC,OACE,0BAAMV,KAAK,SAASY,SAPD,SAACC,GACpBA,EAAMC,iBACNhB,EAAaQ,GACbC,EAAY,eAAKR,MAKf,+BACE,+BACE,4BACE,4BACE,2BACES,SAAUA,EACVE,MAAOJ,EAASN,KAChBe,GAAG,OACHf,KAAK,OACLgB,KAAK,OACLC,YAAY,OACZC,UAAU,KAGd,4BACE,2BACEV,SAAUA,EACVE,MAAOJ,EAASL,QAChBc,GAAG,UACHf,KAAK,UACLgB,KAAK,OACLC,YAAY,UACZC,UAAU,KAGd,4BACE,2BACEV,SAAUA,EACVE,MAAOJ,EAASJ,MAChBa,GAAG,QACHf,KAAK,QACLgB,KAAK,MACLC,YAAY,MACZC,UAAU,KAGd,4BACA,8BACEV,SAAUA,EACVE,MAAOJ,EAASH,YAChBY,GAAG,cACHf,KAAK,cACLiB,YAAY,cACZC,UAAU,EACVC,KAAM,KAGR,4BACA,8BACEX,SAAUA,EACVE,MAAOJ,EAASF,YAChBW,GAAG,cACHf,KAAK,cACLiB,YAAY,cACZC,UAAU,EACVC,KAAM,KAGR,4BACE,4BAAQH,KAAK,UAAb,gBCjCCI,MAtDf,YAA8C,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,aAWxBC,EAAYF,EAAQG,KAAI,SAACC,EAAQV,GACnC,OACA,wBAAIW,IAAKX,GACL,4BAAKU,EAAOzB,MACZ,4BAAKyB,EAAOxB,SACZ,4BAAI,yBAAK0B,IAAKF,EAAOvB,MAAO0B,IAAI,WAAhC,KACC,wBAAIC,UAAU,cACb,2BAAIJ,EAAOtB,cAEb,wBAAI0B,UAAU,cACZ,2BAAIJ,EAAOrB,cAEb,4BACE,4BAAQJ,KAAK,SAAS8B,QAAS,kBAjBvC,SAAsBf,GACpBO,EAAaP,GAgB8BgB,CAAahB,KAAlD,eASR,OACE,yBAAKc,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGN,MC3BIS,EAjBI,CACjB,CACEhC,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCOF6B,MAnBf,WACE,MAA8B5B,mBAAS2B,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KASA,OACE,yBAAKL,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYR,QAASA,EAASC,aATb,SAACa,GAAD,OACrBD,GAAW,SAACE,GAAD,OACXA,EAAeC,QAAO,SAACC,EAAQC,GAAT,OAAmBA,IAAUJ,WAQ/C,kBAAC,EAAD,CAAcrC,aANC,SAAC0C,GAAD,OAAeN,GAAW,SAACE,GAAD,4BAAwBA,GAAxB,CAAwCI,YCVvFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.51f82edd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ createRecipe }) {\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n\n  function onChange({ target }) {\n    const value = target.value;\n    const keyName = target.name;\n    setFormData({ ...formData, [keyName]: value });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createRecipe(formData);\n    setFormData({ ...initialFormState });\n  };\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <input\n                onChange={onChange}\n                value={formData.name}\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                required={true}\n              />\n            </td>\n            <td>\n              <input\n                onChange={onChange}\n                value={formData.cuisine}\n                id=\"cuisine\"\n                name=\"cuisine\"\n                type=\"text\"\n                placeholder=\"Cuisine\"\n                required={true}\n              />\n            </td>\n            <td>\n              <input\n                onChange={onChange}\n                value={formData.photo}\n                id=\"photo\"\n                name=\"photo\"\n                type=\"url\"\n                placeholder=\"URL\"\n                required={true}\n              />\n            </td>\n            <td>\n            <textarea\n              onChange={onChange}\n              value={formData.ingredients}\n              id=\"ingredients\"\n              name=\"ingredients\"\n              placeholder=\"Ingredients\"\n              required={true}\n              rows={3}\n            />\n            </td>\n            <td>\n            <textarea\n              onChange={onChange}\n              value={formData.preparation}\n              id=\"preparation\"\n              name=\"preparation\"\n              placeholder=\"Preparation\"\n              required={true}\n              rows={3}\n            />\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n\n","import React from \"react\";\n\nfunction RecipeList({recipes, deleteRecipe}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  \n  \n  function handleDelete(id) {\n    deleteRecipe(id);\n  }\n  \n  let tableRows = recipes.map((recipe, id) => {\n    return (\n    <tr key={id}>\n        <td>{recipe.name}</td>\n        <td>{recipe.cuisine}</td>\n        <td><img src={recipe.photo} alt=\"Recipe\" /> </td>\n         <td className=\"content_td\">\n          <p>{recipe.ingredients}</p>\n        </td>\n        <td className=\"content_td\">\n          <p>{recipe.preparation}</p>\n        </td>\n        <td>\n          <button name=\"delete\" onClick={() => handleDelete(id)}>\n            Delete\n          </button>\n        </td>\n      </tr>\n    \n    \n    )\n  })\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  const deleteRecipe = (indexToDelete) =>\n  setRecipes((currentRecipes) => \n  currentRecipes.filter((Recipe, index) => index !== indexToDelete))\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\nconst createRecipe = (newRecipe) => setRecipes((currentRecipes) => [...currentRecipes, newRecipe]);\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe}/>\n      <RecipeCreate createRecipe={createRecipe}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}